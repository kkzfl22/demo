<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<http pattern="/js/**" security="none" />
	<http pattern="/jsp/security/login.jsp" security="none" />
	<http pattern="/jsp/security/notsecurity.jsp" security="none" />
	<http pattern="/jsp/security/sessiontimeout.jsp" security="none" />

	<!-- entry-point-ref="authenticationProcessingFilterEntryPoint" 使用sso的单点登陆页面来替代现有的登陆页面 -->
	<http use-expressions="true" entry-point-ref="authenticationProcessingFilterEntryPoint" access-denied-page="/jsp/security/notsecurity.jsp">
		<logout />
		<!-- 实现免登陆验证 -->
		<remember-me />
		<session-management invalid-session-url="/jsp/security/sessiontimeout.jsp">
			<concurrency-control max-sessions="10" error-if-maximum-exceeded="true" />
		</session-management>

		<!-- 自定义登陆验证 -->
		<custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER" />

		<custom-filter ref="securityFilter" before="FILTER_SECURITY_INTERCEPTOR" />
	</http>

	<!-- 自定义登录验证器 -->
	<beans:bean id="loginFilter" class="com.liujun.framework.springsecurity.service.impl.selfsecurity.MyUsernamePasswordAuthenticationFilter">
		<!-- 处理登录 -->
		<beans:property name="filterProcessesUrl" value="/j_spring_security_check"></beans:property>
		<beans:property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"></beans:property>
		<beans:property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler"></beans:property>
		<beans:property name="authenticationManager" ref="myAuthenticationManager"></beans:property>

		<beans:property name="myuserService" ref="myUserServiceImp"></beans:property>
	</beans:bean>

	<beans:bean id="loginLogAuthenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/index.jsp"></beans:property>
	</beans:bean>

	<beans:bean id="simpleUrlAuthenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/jsp/security/login.jsp"></beans:property>
	</beans:bean>

	<!-- 认证过滤器 -->
	<beans:bean id="securityFilter" class="com.liujun.framework.springsecurity.filter.MySecurityFilter">
		<!-- 用户拥有的权限 -->
		<beans:property name="authenticationManager" ref="myAuthenticationManager" />
		<!-- 用户是否拥有所请求资源的权限 -->
		<beans:property name="accessDecisionManager" ref="myAccessDecisionManager" />
		<!-- 资源与权限对应关系 -->
		<beans:property name="securityMetadataSource" ref="mySecurityMetadataSource" />
	</beans:bean>

	<!-- 实现了UserDetailsService的Bean -->
	<authentication-manager alias="myAuthenticationManager">
		<authentication-provider user-service-ref="myUserDetailServiceImpl" />
	</authentication-manager>

	<!-- 进行用户权限加载 -->
	<beans:bean id="myUserDetailServiceImpl" class="com.liujun.framework.springsecurity.service.impl.selfsecurity.MyUserDetailsService">
	</beans:bean>

	<!-- 是否拥有所请求资源的权限 -->
	<beans:bean id="myAccessDecisionManager" class="com.liujun.framework.springsecurity.service.impl.selfsecurity.MyAccessDecisionManager"></beans:bean>

	<!-- 加载资源与权限的对应关系 -->
	<beans:bean id="mySecurityMetadataSource" class="com.liujun.framework.springsecurity.service.impl.selfsecurity.MySecurityMetadataSource">
		<beans:constructor-arg name="resourceService" ref="myResourceServiceImpl"></beans:constructor-arg>
	</beans:bean>

	<!-- 未登录的切入点 ,使用新的sso来代替现有的登陆页面 -->
	<beans:bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/jsp/security/login.jsp"></beans:property>
	</beans:bean>


</beans:beans>